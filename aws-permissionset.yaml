---
AWSTemplateFormatVersion: '2010-09-09'

Description: >-
  Permission set which gives view-only access to the entire environment, and full access to cloudtrail, support, and waf.

Parameters:
  SSOInstanceArn:
    Default: arn:aws:sso:::instance/(sso)?ins-[a-zA-Z0-9-.]{16}
    Description: ARN of the SSO instance the permission set will be created under
    Type: String
  TagCostCenter:
    Default: 0123456
    Description: Cost center that this solution should be billed to
    Type: String
  TagEnvironment:
    Default: Sandbox
    Type: String
  TagOwner:
    Default: Department
    Description: Which business unit (marketing, infrastructure, sales, etc.)
    Type: String
  TagRFC:
    AllowedPattern: "^RFC-[0-9]{6}$"
    Default: RFC-000000
    Description: 'The RFC associated with this solution. Must look like this: RFC-001234'
    Type: String
  TagSolution:
    Default: Global Permission Sets
    Description: Which solution do these resources belong to?
    Type: String
  TagElementDescription:
    Default: Permission set
    Description: Describe what the permission set is used for
    Type: String

Resources:
  SSOPermissionSet:
    Type: AWS::SSO::PermissionSet
    Properties:
      Description: >-
        To be used by the department
      ManagedPolicies:
        - arn:aws:iam::aws:policy/ReadOnlyAccess # this is an AWS managed policy but does not include every service
      InlinePolicy: | # these pieces are what the managed policy has missed, as well as modifications for the department, updated last July 2021
        {
        	"Version": "2012-10-17",
        	"Statement": [{
        			"Effect": "Allow",
        			"Action": [
        				"a4b:ResolveRoom",
        				"a4b:StartSmartHomeApplianceDiscovery",
        				"account:ListRegions",
        				"acm:ExportCertificate",
        				"activate:Get*",
        				"airflow:GetEnvironment",
        				"airflow:List*",
        				"amplifybackend:Get*",
        				"amplifybackend:ListBackendJobs",
        				"app-integrations:GetEventIntegration",
        				"app-integrations:List*",
        				"appconfig:Get*",
        				"appconfig:List*",
        				"appflow:Describe*",
        				"appflow:List*",
        				"application-cost-profiler:Get*",
        				"application-cost-profiler:ListReportDefinitions",
        				"appmesh-preview:Describe*",
        				"appmesh-preview:List*",
        				"appmesh-preview:StreamAggregatedResources",
        				"appmesh:StreamAggregatedResources",
        				"apprunner:Describe*",
        				"apprunner:List*",
        				"aps:DescribeWorkspace",
        				"aps:Get*",
        				"aps:ListWorkspaces",
        				"aps:QueryMetrics",
        				"artifact:DownloadAgreement",
        				"artifact:Get",
        				"aws-marketplace:Describe*",
        				"aws-marketplace:Get*",
        				"aws-marketplace:List*",
        				"aws-marketplace:SearchAgreements",
        				"backup:ExportBackupPlanTemplate",
        				"braket:ListTagsForResource",
        				"ce:DescribeCostCategoryDefinition",
        				"chime:Describe*",
        				"cloudformation:ValidateTemplate",
        				"cloudsearch:search",
        				"cloudsearch:suggest",
        				"cloudshell:GetEnvironmentStatus",
        				"cloudtrail:*",
        				"codecommit:BatchDescribeMergeConflicts",
        				"codecommit:CancelUploadArchive",
        				"codecommit:EvaluatePullRequestApprovalRules",
        				"codeguru-profiler:BatchGetFrameMetricData",
        				"codeguru-reviewer:CreateConnectionToken",
        				"codeguru:GetCodeGuruFreeTrialSummary",
        				"codestar-connections:Get*",
        				"codestar-connections:List*",
        				"codestar-connections:PassConnection",
        				"codestar-connections:RegisterAppCode",
        				"codestar-connections:Start*",
        				"codestar-connections:UseConnection",
        				"comprehend:BatchDetect*",
        				"comprehend:ClassifyDocument",
        				"comprehend:ContainsPiiEntities",
        				"comprehend:Describe*",
        				"comprehend:Detect*",
        				"comprehend:List*",
        				"comprehendmedical:Describe*",
        				"comprehendmedical:Detect*",
        				"comprehendmedical:Infer*",
        				"comprehendmedical:List*",
        				"databrew:Describe*",
        				"databrew:List*",
        				"dax:ConditionCheckItem",
        				"dbqms:Describe*",
        				"dbqms:GetQueryString",
        				"deepcomposer:ListTagsForResource",
        				"deeplens:BatchGet*",
        				"deeplens:Get*",
        				"deeplens:List*",
        				"detective:SearchGraph",
        				"devops-guru:StartCostEstimation",
        				"directconnect:ListVirtualInterfaceTestHistory",
        				"dlm:ListTagsForResource",
        				"ds:CheckAlias",
        				"dynamodb:ConditionCheckItem",
        				"dynamodb:PartiQLSelect",
        				"ebs:GetSnapshotBlock",
        				"ebs:List*",
        				"ec2:ExportClient*",
        				"eks:AccessKubernetesApi",
        				"elastic-inference:Describe*",
        				"elastic-inference:ListTagsForResource",
        				"elasticfilesystem:ClientMount",
        				"elasticfilesystem:ListTagsForResource",
        				"elemental-activations:Complete*",
        				"elemental-activations:DownloadSoftware",
        				"elemental-activations:GenerateLicenses",
        				"elemental-activations:GetActivation",
        				"elemental-activations:ListTagsForResource",
        				"elemental-activations:Start*",
        				"elemental-support-cases:Get*",
        				"elemental-support-content:Query",
        				"emr-containers:Describe*",
        				"emr-containers:List*",
        				"es:ESCrossClusterGet",
        				"frauddetector:BatchGetVariable",
        				"frauddetector:Describe*",
        				"frauddetector:Get*",
        				"frauddetector:ListTagsForResource",
        				"freertos:Get*",
        				"gamelift:RequestUploadCredentials",
        				"gamelift:ValidateMatchmakingRuleSet",
        				"geo:BatchGetDevicePosition",
        				"geo:CalculateRoute",
        				"geo:Describe*",
        				"geo:Get*",
        				"geo:List*",
        				"geo:Search*",
        				"glue:SearchTables",
        				"grafana:DescribeWorkspace",
        				"grafana:List*",
        				"healthlake:Describe*",
        				"healthlake:ListFHIRDatastores",
        				"healthlake:ReadResource",
        				"healthlake:Search*",
        				"honeycode:DescribeTableDataImportJob",
        				"honeycode:GetScreenData",
        				"honeycode:List*",
        				"honeycode:QueryTableRows",
        				"iot-device-tester:CheckVersion",
        				"iot-device-tester:DownloadTestSuite",
        				"iot-device-tester:LatestIdt",
        				"iot-device-tester:SupportedVersion",
        				"iot1click:*DeviceClaim",
        				"iot1click:ClaimDevicesByClaimCode",
        				"iot1click:Describe*",
        				"iot1click:Get*",
        				"iot1click:List*",
        				"iot1click:UnclaimDevice",
        				"iot:SearchIndex",
        				"iot:Test*",
        				"iot:ValidateSecurityProfileBehaviors",
        				"iotanalytics:RunPipelineActivity",
        				"iotdeviceadvisor:Get*",
        				"iotdeviceadvisor:List*",
        				"iotsitewise:Describe*",
        				"iotsitewise:Get*",
        				"iotsitewise:List*",
        				"iotthingsgraph:DescribeNamespace",
        				"iotthingsgraph:Get*",
        				"iotthingsgraph:List*",
        				"iotthingsgraph:Search*",
        				"kafka-cluster:Describe*",
        				"kafka-cluster:ReadData",
        				"kendra:GetQuerySuggestions",
        				"kinesis:SubscribeToShard",
        				"kinesisanalytics:CreateApplicationPresignedUrl",
        				"lakeformation:Get*",
        				"lakeformation:List*",
        				"lex:Describe*",
        				"lex:List*",
        				"lookoutequipment:Describe*",
        				"lookoutequipment:List*",
        				"lookoutmetrics:Describe*",
        				"lookoutmetrics:Get*",
        				"lookoutmetrics:List*",
        				"macie2:Describe*",
        				"macie2:Get*",
        				"macie2:List*",
        				"macie2:SearchResources",
        				"macie:List*",
        				"managedblockchain:Get*",
        				"managedblockchain:List*",
        				"mechanicalturk:Get*",
        				"mechanicalturk:List*",
        				"mediaconnect:Describe*",
        				"mediaconnect:List*",
        				"medialive:Describe*",
        				"medialive:List*",
        				"mediapackage-vod:Describe*",
        				"mediapackage-vod:List*",
        				"mediatailor:GetPlaybackConfiguration",
        				"mediatailor:List*",
        				"mgn:ListTagsForResource",
        				"mobiletargeting:PhoneNumberValidate",
        				"networkmanager:ListTagsForResource",
        				"nimble:Get*",
        				"nimble:List*",
        				"opsworks-cm:ExportServerEngineAttribute",
        				"opsworks:ListTags",
        				"pricing:DescribeServices",
        				"pricing:Get*",
        				"profile:Get*",
        				"profile:List*",
        				"profile:SearchProfiles",
        				"proton:Get*",
        				"proton:List*",
        				"qldb:PartiQLHistoryFunction",
        				"qldb:PartiQLSelect",
        				"quicksight:Describe*",
        				"quicksight:Get*",
        				"quicksight:List*",
        				"quicksight:PassData*",
        				"quicksight:Search*",
        				"redshift-data:Describe*",
        				"redshift-data:GetStatementResult",
        				"redshift-data:List*",
        				"redshift:FetchResults",
        				"rekognition:Describe*",
        				"rekognition:Get*",
        				"s3-object-lambda:Get*",
        				"s3-object-lambda:List*",
        				"s3-outposts:Get*",
        				"s3-outposts:List*",
        				"sagemaker:RenderUiTemplate",
        				"sdb:DomainMetadata",
        				"securityhub:Send*",
        				"servicediscovery:DiscoverInstances",
        				"ses:Verify*",
        				"sms-voice:GetConfigurationSetEventDestinations",
        				"sms-voice:ListConfigurationSets",
        				"sms:Get*",
        				"sms:ListApps",
        				"ssm:PutConfigurePackageResult",
        				"sso-directory:Get*",
        				"sso-directory:IsMemberInGroup",
        				"sumerian:ViewRelease",
        				"support:*",
        				"tag:DescribeReportCreation",
        				"textract:AnalyzeDocument",
        				"textract:DetectDocumentText",
        				"textract:Get*",
        				"timestream:Describe*",
        				"timestream:List*",
        				"timestream:Select*",
        				"transcribe:DescribeLanguageModel",
        				"translate:DescribeTextTranslationJob",
        				"translate:Get*",
        				"translate:List*",
        				"translate:TranslateText",
        				"waf:*",
        				"wafv2:*",
        				"wellarchitected:Get*",
        				"wellarchitected:List*",
        				"workdocs:DownloadDocumentVersion",
        				"worklink:SearchEntity",
        				"workmailmessageflow:GetRawMessageContent",
        				"workspaces:ListAvailableManagementCidrRanges",
        				"xray:ListTagsForResource"
        			],
        			"Resource": "*"
        		},
        		{
        			"Effect": "Deny",
        			"Action": [
        				"aws-portal:*",
        				"billing:*",
        				"budgets:*",
        				"ce:*",
        				"cur:*",
        				"purchase-orders:*"
        			],
        			"Resource": "*"
        		}
        	]
        }
      InstanceArn: !Ref SSOInstanceArn
      Name: 'AWS-PermissionSet'
      SessionDuration: PT1H
      Tags:
        - Key: Cost Center
          Value: !Ref TagCostCenter
        - Key: Element Description
          Value: !Ref TagElementDescription
        - Key: Environment
          Value: !Ref TagEnvironment
        - Key: Owner
          Value: !Ref TagOwner
        - Key: RFC
          Value: !Ref TagRFC
        - Key: Solution
          Value: !Ref TagSolution
